
1. Добавить хранение файлов (Amazon S3, MinIO, локально) (50%)
Для чего: хранить аватарки пользователей, вложения к заметкам, экспорт/импорт данных.
Как: подключить Amazon S3 или MinIO (open-source аналог S3, можно локально).
Что изучишь: работу с облачными хранилищами, безопасность доступа к файлам, работу с multipart/form-data.


2. JWT Refresh Token через Redis (-)
Для чего: хранить валидные refresh-токены, делать logout, blacklist токенов.
Как: подключить Redis, хранить там refresh-токены, реализовать logout.
Что изучишь: работу с Redis, best practices по безопасности JWT.


3. Роли и права доступа (RBAC) (50%)
Для чего: разграничить доступ (например, admin может удалять пользователей, user — только свои заметки).
Как: добавить роли в User, использовать аннотации Spring Security @PreAuthorize, @Secured.
Что изучишь: продвинутую работу с Spring Security.


4. Email-уведомления (50%)
Для чего: отправлять подтверждение регистрации, сброс пароля, уведомления о новых заметках.
Как: использовать Spring Mail, подключить SMTP (Mailtrap, Gmail, Yandex).
Что изучишь: работу с email, шаблоны писем, асинхронную отправку.


5. Swagger/OpenAPI: кастомизация и документация
Для чего: сделать красивую и удобную документацию для фронта/мобильных разработчиков.
Как: добавить описания, примеры, security схемы, группировку эндпоинтов.
Что изучишь: best practices API-документации.


6. CI/CD (GitHub Actions, GitLab CI, Jenkins)
Для чего: автоматическая сборка, тесты, деплой на сервер или в облако.
Как: настроить pipeline для сборки Docker-образов, прогонки тестов, деплоя.
Что изучишь: DevOps-подходы, автоматизацию.


7. Тестирование
Unit-тесты: для сервисов, контроллеров (JUnit, Mockito).
Интеграционные тесты: с тестовой БД (Testcontainers).
Что изучишь: покрытие кода тестами, TDD.


8. Frontend (React/Vue/Angular) (✓)
Для чего: сделать свой UI для заметок и пользователей.
Как: написать простой SPA, подключить к своему API.
Что изучишь: fullstack-разработку, работу с REST API на фронте.


9. Мониторинг и логирование
Для чего: отслеживать ошибки, производительность, логи.
Как: подключить Prometheus + Grafana, ELK stack (Elasticsearch, Logstash, Kibana).
Что изучишь: мониторинг, анализ логов, алерты.


10. Микросервисы и взаимодействие
Для чего: добавить ещё один сервис (например, сервис тегов, сервис напоминаний).
Как: использовать Feign, OpenFeign, REST, RabbitMQ/Kafka для обмена сообщениями.
Что изучишь: микросервисную архитектуру, асинхронные очереди.


11. OAuth2/Social Login
Для чего: дать пользователям возможность логиниться через Google, VK, GitHub.
Как: использовать Spring Security OAuth2.
Что изучишь: современные подходы к аутентификации.


12. Docker Compose: продвинутые сценарии
Для чего: запускать проект с разными конфигами (dev/prod), секреты через Docker secrets, отдельные сети.
Что изучишь: инфраструктуру и best practices.


13. Документация и README
Для чего: чтобы твой проект было легко запустить и понять другим.
Как: оформить README с примерами запросов, схемой архитектуры, инструкциями по запуску.
